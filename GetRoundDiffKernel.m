function [ Kernel ] = GetRoundDiffKernel( Size, W )
%GETROUNDDIFFKERNEL ¬озвращает €дро свЄртки дл€ поиска локальных градиентов (вртикальных)
%Size - размерность €дра (всегда нечЄтное) (если Size=3 - ф-€ возвращает эквивалент €дра —обел€)
%W - протабулированна€ функци€ убывани€ веса точки в зависимости от рассто€ни€ до центра €дра (первое значение соответствует центральному элементу первой от центра стоки, а последнее - центральному элементу последней строки)
% ¬еса углов €дра берутс€ из линейного приближени€ последней точки W и нул€, который соответствует угловым точкам €дра  
if ((Size-1)/2)~=fix((Size-1)/2)
   error('€дро должно иметь центральный элемент') 
end
Kernel=zeros(Size); %»нициализаци€ €дра
CP=(Size+1)/2; % оордината центра
if max(size(W))==1      %»сключение дл€ константного веса 
    Wspace=(Size-1)/2;  %Ётот вес соответствует рассто€ни€м от первой до последней строки (по центру)
else
Wspace=1:((Size-1)/2-1)./(max(size(W))-1):(Size-1)/2;   %–асстоо€ни€ до CP, которые соответствуют весам приведеным в W
end
W(end+1)=0;                 %ƒобавление точки соответствующей углу €дра
Wspace(end+1)=sqrt(2)*Size/2;%и соответствующее ей рассто€ни от центра

for j=1:Size;       %»тератор столбцов
  for i=1:(CP-1)  %»тератор строк 
    Angle=atan((CP-j)./(CP-i));    %‘ормирование верхней половины €дра - угол(от —евера)
    Dist=sqrt((CP-i).^2+(CP-j).^2);%Ёвклидово рассто€ние (в дол€х пиксел€) до центра €дра    
    NrstL=find(Wspace>Dist,1);%ѕоиск пары точек в промежутке которых находитс€ текущее значение Dist
    LocalW=((Dist-Wspace(NrstL-1))*W(NrstL)+(Wspace(NrstL)-Dist)*W(NrstL-1))./(Wspace(NrstL)-Wspace(NrstL-1)); %¬ес в текущей точке Dist (в линейном приближении)
    Kernel(i,j)=cos(Angle).*LocalW; %‘ормирование текущего элемента €дра
  end
end
Kernel(CP+1:end,:)=-flip(Kernel(1:CP-1,:),1);   %ќтображение нижней (отрицательной) половины €дра 
     %surf(Kernel');
     %surf(abs(Kernel'));
     surf(((Kernel').^2 + Kernel.^2).^0.5);
hold on;
     zlim([-3 3]);
     xlabel('x');
     ylabel('y');
     %zlabel('$$\mathbf{K}$$','Interpreter','latex');
     %zlabel('$$|\mathbf{K}|$$','Interpreter','latex');
     zlabel('$$\sqrt{ \mathbf{K}^{2}+{\mathbf{K}^T}^{2} } $$','Interpreter','latex');
     
hold off;
end

